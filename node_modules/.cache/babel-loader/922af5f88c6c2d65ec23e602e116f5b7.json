{"ast":null,"code":"var _jsxFileName = \"/Users/r2h/Desktop/tic-tac-toe/src/Components/Board/Board.js\";\nimport React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png';\nimport fellowship from '../../img/fellowships.png';\n\nconst Board = () => {\n  const initialBoard = Array(9).fill(null);\n  const [squares, setSquares] = useState(initialBoard);\n  const [playerXisNext, setPlayerXisNext] = useState(true);\n\n  const renderSquare = i => {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: squares[i],\n      onClick: () => handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    });\n  };\n\n  const handleClick = i => {\n    const newSquares = [...squares];\n    newSquares[i] = playerXisNext ? \"x\" : \"O\";\n    setSquares(newSquares);\n    setPlayerXisNext(!playerXisNext);\n  };\n\n  const calculateWinner = squares => {\n    /* Squares indexes as they appear in UI:\n    0 1 2\n    3 4 5\n    6 7 8\n    */\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // shows all of the winning combinations (\"lines\")\n    //Iterate over lines\n\n    for (let line of lines) {\n      const [a, b, c] = line;\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n\n      return null;\n    }\n  };\n\n  const winner = calculateWinner(squares);\n\n  const getStatus = () => {\n    if (winner) {\n      return \"Congrats player \" + winner + \" for winning!\";\n    } else {\n      return \"Next player is player \" + (playerXisNext ? \"X\" : \"O\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: r2h,\n    alt: \"r2h logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: fellowship,\n    alt: \"fellowship\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, getStatus()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8))))));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/r2h/Desktop/tic-tac-toe/src/Components/Board/Board.js"],"names":["React","useState","Square","r2h","fellowship","Board","initialBoard","Array","fill","squares","setSquares","playerXisNext","setPlayerXisNext","renderSquare","i","handleClick","newSquares","calculateWinner","lines","line","a","b","c","winner","getStatus"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png'\nimport fellowship from '../../img/fellowships.png'\nconst Board = () => {\nconst initialBoard = Array(9).fill(null)\nconst [squares ,setSquares] = useState(initialBoard)\nconst [playerXisNext, setPlayerXisNext] = useState(true)\n    const renderSquare = (i) => {\n        return <Square value={squares[i]} onClick={ () => handleClick(i) } />\n    }\n    const handleClick = (i) => {\n        const newSquares = [...squares]\n        newSquares[i] = playerXisNext ? \"x\" : \"O\"\n        setSquares(newSquares)\n        setPlayerXisNext(!playerXisNext)\n    }\n    const calculateWinner = (squares) => {\n         /* Squares indexes as they appear in UI:\n        0 1 2\n        3 4 5\n        6 7 8\n        */\n       const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]; // shows all of the winning combinations (\"lines\")\n    //Iterate over lines\n    for (let line of lines) {\n        const [a, b, c] = line\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n        return null\n    }    \n}\nconst winner = calculateWinner(squares)\nconst getStatus = () => {\n    if(winner){\n        return \"Congrats player \" + winner + \" for winning!\"\n    } else{\n        return \"Next player is player \" + (playerXisNext ? \"X\" : \"O\")\n    }\n}\n    return (\n        <>\n            <main className=\"main--container\">\n                <div className=\"logo\">\n                    <img src={r2h} alt=\"r2h logo\" />\n                    <img src={fellowship} alt=\"fellowship\" />\n                </div>\n                <div className=\"status\">\n                    {getStatus()}\n                </div>\n                <div className=\"board--container\">\n                    <div className=\"board\">\n                        <div className=\"board--row\">\n                            {renderSquare(0)}\n                            {renderSquare(1)}\n                            {renderSquare(2)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(3)}\n                            {renderSquare(4)}\n                            {renderSquare(5)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(6)}\n                            {renderSquare(7)}\n                            {renderSquare(8)}\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}